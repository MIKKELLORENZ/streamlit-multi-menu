{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nimport { Endianness } from './endianness.mjs';\nimport { Field } from './field.mjs';\nimport { KeyValue } from './key-value.mjs';\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n */\nexport class Schema {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  static getRootAsSchema(bb, obj) {\n    return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static getSizePrefixedRootAsSchema(bb, obj) {\n    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n    return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  /**\n   * endianness of the buffer\n   * it is Little Endian by default\n   * if endianness doesn't match the underlying system then the vectors need to be converted\n   */\n  endianness() {\n    const offset = this.bb.__offset(this.bb_pos, 4);\n    return offset ? this.bb.readInt16(this.bb_pos + offset) : Endianness.Little;\n  }\n  fields(index, obj) {\n    const offset = this.bb.__offset(this.bb_pos, 6);\n    return offset ? (obj || new Field()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n  }\n  fieldsLength() {\n    const offset = this.bb.__offset(this.bb_pos, 6);\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n  }\n  customMetadata(index, obj) {\n    const offset = this.bb.__offset(this.bb_pos, 8);\n    return offset ? (obj || new KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n  }\n  customMetadataLength() {\n    const offset = this.bb.__offset(this.bb_pos, 8);\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n  }\n  /**\n   * Features used in the stream/file.\n   */\n  features(index) {\n    const offset = this.bb.__offset(this.bb_pos, 10);\n    return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);\n  }\n  featuresLength() {\n    const offset = this.bb.__offset(this.bb_pos, 10);\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n  }\n  static startSchema(builder) {\n    builder.startObject(4);\n  }\n  static addEndianness(builder, endianness) {\n    builder.addFieldInt16(0, endianness, Endianness.Little);\n  }\n  static addFields(builder, fieldsOffset) {\n    builder.addFieldOffset(1, fieldsOffset, 0);\n  }\n  static createFieldsVector(builder, data) {\n    builder.startVector(4, data.length, 4);\n    for (let i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i]);\n    }\n    return builder.endVector();\n  }\n  static startFieldsVector(builder, numElems) {\n    builder.startVector(4, numElems, 4);\n  }\n  static addCustomMetadata(builder, customMetadataOffset) {\n    builder.addFieldOffset(2, customMetadataOffset, 0);\n  }\n  static createCustomMetadataVector(builder, data) {\n    builder.startVector(4, data.length, 4);\n    for (let i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i]);\n    }\n    return builder.endVector();\n  }\n  static startCustomMetadataVector(builder, numElems) {\n    builder.startVector(4, numElems, 4);\n  }\n  static addFeatures(builder, featuresOffset) {\n    builder.addFieldOffset(3, featuresOffset, 0);\n  }\n  static createFeaturesVector(builder, data) {\n    builder.startVector(8, data.length, 8);\n    for (let i = data.length - 1; i >= 0; i--) {\n      builder.addInt64(data[i]);\n    }\n    return builder.endVector();\n  }\n  static startFeaturesVector(builder, numElems) {\n    builder.startVector(8, numElems, 8);\n  }\n  static endSchema(builder) {\n    const offset = builder.endObject();\n    return offset;\n  }\n  static finishSchemaBuffer(builder, offset) {\n    builder.finish(offset);\n  }\n  static finishSizePrefixedSchemaBuffer(builder, offset) {\n    builder.finish(offset, undefined, true);\n  }\n  static createSchema(builder, endianness, fieldsOffset, customMetadataOffset, featuresOffset) {\n    Schema.startSchema(builder);\n    Schema.addEndianness(builder, endianness);\n    Schema.addFields(builder, fieldsOffset);\n    Schema.addCustomMetadata(builder, customMetadataOffset);\n    Schema.addFeatures(builder, featuresOffset);\n    return Schema.endSchema(builder);\n  }\n}","map":{"version":3,"names":["flatbuffers","Endianness","Field","KeyValue","Schema","constructor","bb","bb_pos","__init","i","getRootAsSchema","obj","readInt32","position","getSizePrefixedRootAsSchema","setPosition","SIZE_PREFIX_LENGTH","endianness","offset","__offset","readInt16","Little","fields","index","__indirect","__vector","fieldsLength","__vector_len","customMetadata","customMetadataLength","features","readInt64","createLong","featuresLength","startSchema","builder","startObject","addEndianness","addFieldInt16","addFields","fieldsOffset","addFieldOffset","createFieldsVector","data","startVector","length","addOffset","endVector","startFieldsVector","numElems","addCustomMetadata","customMetadataOffset","createCustomMetadataVector","startCustomMetadataVector","addFeatures","featuresOffset","createFeaturesVector","addInt64","startFeaturesVector","endSchema","endObject","finishSchemaBuffer","finish","finishSizePrefixedSchemaBuffer","undefined","createSchema"],"sources":["C:\\Users\\mvlor\\OneDrive\\Desktop\\custom_component\\streamlit_multi_menu\\streamlit_multi_menu\\frontend\\node_modules\\apache-arrow\\src\\fb\\schema.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { Endianness } from './endianness.js';\nimport { Field } from './field.js';\nimport { KeyValue } from './key-value.js';\n\n\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n */\nexport class Schema {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Schema {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsSchema(bb:flatbuffers.ByteBuffer, obj?:Schema):Schema {\n  return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsSchema(bb:flatbuffers.ByteBuffer, obj?:Schema):Schema {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * endianness of the buffer\n * it is Little Endian by default\n * if endianness doesn't match the underlying system then the vectors need to be converted\n */\nendianness():Endianness {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : Endianness.Little;\n}\n\nfields(index: number, obj?:Field):Field|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Field()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\nfieldsLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\ncustomMetadata(index: number, obj?:KeyValue):KeyValue|null {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new KeyValue()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\ncustomMetadataLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\n/**\n * Features used in the stream/file.\n */\nfeatures(index: number):flatbuffers.Long|null {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);\n}\n\nfeaturesLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nstatic startSchema(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n}\n\nstatic addEndianness(builder:flatbuffers.Builder, endianness:Endianness) {\n  builder.addFieldInt16(0, endianness, Endianness.Little);\n}\n\nstatic addFields(builder:flatbuffers.Builder, fieldsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, fieldsOffset, 0);\n}\n\nstatic createFieldsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startFieldsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic addCustomMetadata(builder:flatbuffers.Builder, customMetadataOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, customMetadataOffset, 0);\n}\n\nstatic createCustomMetadataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startCustomMetadataVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic addFeatures(builder:flatbuffers.Builder, featuresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, featuresOffset, 0);\n}\n\nstatic createFeaturesVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addInt64(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startFeaturesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n}\n\nstatic endSchema(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic finishSchemaBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n}\n\nstatic finishSizePrefixedSchemaBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, undefined, true);\n}\n\nstatic createSchema(builder:flatbuffers.Builder, endianness:Endianness, fieldsOffset:flatbuffers.Offset, customMetadataOffset:flatbuffers.Offset, featuresOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Schema.startSchema(builder);\n  Schema.addEndianness(builder, endianness);\n  Schema.addFields(builder, fieldsOffset);\n  Schema.addCustomMetadata(builder, customMetadataOffset);\n  Schema.addFeatures(builder, featuresOffset);\n  return Schema.endSchema(builder);\n}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}