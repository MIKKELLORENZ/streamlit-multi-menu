{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mvlor\\\\OneDrive\\\\Desktop\\\\custom_component\\\\multi_menu\\\\template\\\\multi_menu\\\\frontend\\\\src\\\\MultiMenu.tsx\";\nimport React from \"react\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst componentStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  width: '100%',\n  fontFamily: 'sans-serif'\n};\nconst titleContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  textAlign: 'center',\n  flex: 1,\n  margin: '0 5px'\n};\nconst titleStyle = {\n  marginBottom: '5px',\n  fontWeight: 'bold'\n};\nconst lineStyle = {\n  height: '1.25px',\n  backgroundColor: '#BDBFC3',\n  width: '100%'\n};\nconst buttonStyle = {\n  cursor: \"pointer\",\n  width: \"100%\",\n  borderRadius: '8px',\n  color: '#31333F',\n  border: \"none\",\n  padding: '5px 5px'\n};\nclass MultiMenu extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.fontLoaded = false;\n    this.render = () => {\n      const {\n        menu_titles,\n        menu_titles_font_size,\n        sub_menus,\n        use_container_width,\n        sub_menu_color = '#F0F2F6',\n        sub_menu_font_size,\n        sub_menu_button_gap = 10,\n        sub_menu_font_color = '#31333F',\n        sub_menu_icons\n      } = this.props.args;\n      const darkerSubMenuColor = darkenColor(sub_menu_color, 10);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: componentStyle,\n        children: menu_titles.map((title, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: titleContainerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: titleStyle,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: lineStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), sub_menus[title] && sub_menus[title].length > 0 && sub_menus[title].map((subMenu, subMenuIndex) => {\n            const iconNameExists = sub_menu_icons && sub_menu_icons[title] && sub_menu_icons[title][subMenuIndex];\n            const iconName = iconNameExists ? sub_menu_icons[title][subMenuIndex] : '';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: sub_menu_button_gap,\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.onSubMenuClicked(subMenu),\n                onMouseOver: e => {\n                  const button = e.currentTarget;\n                  button.style.backgroundColor = darkenColor(safeSubMenuColor, 20);\n                  button.style.filter = 'brightness(80%)';\n                },\n                onMouseOut: e => {\n                  const button = e.currentTarget;\n                  button.style.backgroundColor = safeSubMenuColor;\n                  button.style.filter = 'none';\n                },\n                style: {\n                  cursor: \"pointer\",\n                  width: \"100%\",\n                  borderRadius: '8px',\n                  backgroundColor: sub_menu_color,\n                  color: sub_menu_font_color,\n                  border: \"none\",\n                  padding: '5px 5px',\n                  fontSize: sub_menu_font_size\n                  // Other styles...\n                },\n                children: [iconNameExists && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    verticalAlign: 'middle',\n                    marginRight: '8px'\n                  },\n                  children: iconName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), subMenu]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, subMenu, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this);\n          })]\n        }, title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this);\n    };\n    this.onSubMenuClicked = subMenuName => {\n      // Handle sub menu click\n      Streamlit.setComponentValue(subMenuName);\n    };\n  }\n  componentDidMount() {\n    this.loadGoogleIcons();\n  }\n  componentWillUnmount() {\n    this.removeGoogleIcons();\n  }\n  loadGoogleIcons() {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/icon?family=Material+Icons';\n    link.rel = 'stylesheet';\n    link.onload = () => this.fontLoaded = true;\n    link.onerror = () => console.error('Error loading Material Icons');\n    document.head.appendChild(link);\n  }\n  removeGoogleIcons() {\n    const links = document.head.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (const link of links) {\n      if (link.href.includes('fonts.googleapis.com/icon?family=Material+Icons')) {\n        document.head.removeChild(link);\n        break;\n      }\n    }\n  }\n}\nexport default _c = withStreamlitConnection(MultiMenu);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","componentStyle","display","flexDirection","width","fontFamily","titleContainerStyle","alignItems","textAlign","flex","margin","titleStyle","marginBottom","fontWeight","lineStyle","height","backgroundColor","buttonStyle","cursor","borderRadius","color","border","padding","MultiMenu","constructor","args","fontLoaded","render","menu_titles","menu_titles_font_size","sub_menus","use_container_width","sub_menu_color","sub_menu_font_size","sub_menu_button_gap","sub_menu_font_color","sub_menu_icons","props","darkerSubMenuColor","darkenColor","style","children","map","title","index","fileName","_jsxFileName","lineNumber","columnNumber","length","subMenu","subMenuIndex","iconNameExists","iconName","marginTop","onClick","onSubMenuClicked","onMouseOver","e","button","currentTarget","safeSubMenuColor","filter","onMouseOut","fontSize","className","verticalAlign","marginRight","subMenuName","setComponentValue","componentDidMount","loadGoogleIcons","componentWillUnmount","removeGoogleIcons","link","document","createElement","href","rel","onload","onerror","console","error","head","appendChild","links","querySelectorAll","includes","removeChild","_c","$RefreshReg$"],"sources":["C:/Users/mvlor/OneDrive/Desktop/custom_component/multi_menu/template/multi_menu/frontend/src/MultiMenu.tsx"],"sourcesContent":["import React, { useState, useEffect, CSSProperties } from \"react\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\n\ninterface MenuConfig {\n  menu_titles: string[];\n  menu_titles_font_size: string;\n  sub_menus: Record<string, string[]>;\n  use_container_width?: boolean;\n  sub_menu_color?: string;\n  sub_menu_font_size?: string;\n  sub_menu_button_gap?: number;\n  sub_menu_font_color?: string;\n  sub_menu_imgs?: Record<string, string[]>;\n  sub_menu_icons?: Record<string, string[]>;\n}\n\nconst componentStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  width: '100%',\n  fontFamily: 'sans-serif'\n};\n\nconst titleContainerStyle: CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  textAlign: 'center',\n  flex: 1,\n  margin: '0 5px'\n};\n\nconst titleStyle: CSSProperties = {\n  marginBottom: '5px',\n  fontWeight: 'bold'\n};\n\nconst lineStyle: CSSProperties = {\n  height: '1.25px',\n  backgroundColor: '#BDBFC3',\n  width: '100%',\n};\n\nconst buttonStyle: CSSProperties = {\n  cursor: \"pointer\",\n  width: \"100%\",\n  borderRadius: '8px',\n  color: '#31333F',\n  border: \"none\",\n  padding: '5px 5px',\n};\n\nclass MultiMenu extends StreamlitComponentBase<MenuConfig> {\n  private fontLoaded: boolean = false;\n\n  componentDidMount() {\n    this.loadGoogleIcons();\n  }\n\n  componentWillUnmount() {\n    this.removeGoogleIcons();\n  }\n\n  loadGoogleIcons() {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/icon?family=Material+Icons';\n    link.rel = 'stylesheet';\n    link.onload = () => this.fontLoaded = true;\n    link.onerror = () => console.error('Error loading Material Icons');\n    document.head.appendChild(link);\n  }\n\n  removeGoogleIcons() {\n    const links = document.head.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (const link of links) {\n      if (link.href.includes('fonts.googleapis.com/icon?family=Material+Icons')) {\n        document.head.removeChild(link);\n        break;\n      }\n    }\n  }\n\n  render = () => {\n    const {\n      menu_titles,\n      menu_titles_font_size,\n      sub_menus,\n      use_container_width,\n      sub_menu_color = '#F0F2F6',\n      sub_menu_font_size,\n      sub_menu_button_gap = 10,\n      sub_menu_font_color = '#31333F',\n      sub_menu_icons,\n    } = this.props.args;\n\n    const darkerSubMenuColor = darkenColor(sub_menu_color, 10);\n\n    return (\n      <div style={componentStyle}>\n        {menu_titles.map((title: string, index: number) => (\n          <div key={title} style={titleContainerStyle}>\n            <h3 style={titleStyle}>{title}</h3>\n            <div style={lineStyle}></div>\n            {sub_menus[title] && sub_menus[title].length > 0 &&\n              sub_menus[title].map((subMenu: string, subMenuIndex: number) => {\n                const iconNameExists = sub_menu_icons && sub_menu_icons[title] && sub_menu_icons[title][subMenuIndex];\n                const iconName = iconNameExists ? sub_menu_icons[title][subMenuIndex] : '';\n\n\n              return (\n                <div key={subMenu} style={{ marginTop: sub_menu_button_gap, width:'100%'}}>\n                  <button\n                    onClick={() => this.onSubMenuClicked(subMenu)}\n                    onMouseOver={(e) => {\n                      const button = e.currentTarget;\n                      button.style.backgroundColor = darkenColor(safeSubMenuColor, 20);\n                      button.style.filter = 'brightness(80%)';\n                    }}\n                    onMouseOut={(e) => {\n                      const button = e.currentTarget;\n                      button.style.backgroundColor = safeSubMenuColor;\n                      button.style.filter = 'none';\n                    }}\n                    style={{ \n                      cursor: \"pointer\", \n                      width: \"100%\", \n                      borderRadius: '8px',\n                      backgroundColor: sub_menu_color,\n                      color: sub_menu_font_color,\n                      border: \"none\",\n                      padding: '5px 5px',\n                      fontSize: sub_menu_font_size,\n                      // Other styles...\n                    }}\n                  >\n                  {/* Conditionally render icon only if iconName exists */}\n                  {iconNameExists && (\n                    <i className=\"material-icons\" style={{verticalAlign: 'middle', marginRight: '8px'}}>\n                      {iconName}\n                    </i>\n                      )}\n                    {subMenu}\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  private onSubMenuClicked = (subMenuName: string): void => {\n    // Handle sub menu click\n    Streamlit.setComponentValue(subMenuName);\n  };\n}\n\nexport default withStreamlitConnection(MultiMenu);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}