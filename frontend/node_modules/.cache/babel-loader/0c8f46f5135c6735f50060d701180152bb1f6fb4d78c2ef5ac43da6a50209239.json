{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty.mjs';\nimport { instance as getVisitor } from '../visitor/get.mjs';\nimport { instance as setVisitor } from '../visitor/set.mjs';\n/** @ignore */\nconst kParent = Symbol.for('parent');\n/** @ignore */\nconst kRowIndex = Symbol.for('rowIndex');\nexport class StructRow {\n  constructor(parent, rowIndex) {\n    this[kParent] = parent;\n    this[kRowIndex] = rowIndex;\n    return new Proxy(this, new StructRowProxyHandler());\n  }\n  toArray() {\n    return Object.values(this.toJSON());\n  }\n  toJSON() {\n    const i = this[kRowIndex];\n    const parent = this[kParent];\n    const keys = parent.type.children;\n    const json = {};\n    for (let j = -1, n = keys.length; ++j < n;) {\n      json[keys[j].name] = getVisitor.visit(parent.children[j], i);\n    }\n    return json;\n  }\n  toString() {\n    return `{${[...this].map(([key, val]) => `${valueToString(key)}: ${valueToString(val)}`).join(', ')}}`;\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return this.toString();\n  }\n  [Symbol.iterator]() {\n    return new StructRowIterator(this[kParent], this[kRowIndex]);\n  }\n}\nclass StructRowIterator {\n  constructor(data, rowIndex) {\n    this.childIndex = 0;\n    this.children = data.children;\n    this.rowIndex = rowIndex;\n    this.childFields = data.type.children;\n    this.numChildren = this.childFields.length;\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  next() {\n    const i = this.childIndex;\n    if (i < this.numChildren) {\n      this.childIndex = i + 1;\n      return {\n        done: false,\n        value: [this.childFields[i].name, getVisitor.visit(this.children[i], this.rowIndex)]\n      };\n    }\n    return {\n      done: true,\n      value: null\n    };\n  }\n}\nObject.defineProperties(StructRow.prototype, {\n  [Symbol.toStringTag]: {\n    enumerable: false,\n    configurable: false,\n    value: 'Row'\n  },\n  [kParent]: {\n    writable: true,\n    enumerable: false,\n    configurable: false,\n    value: null\n  },\n  [kRowIndex]: {\n    writable: true,\n    enumerable: false,\n    configurable: false,\n    value: -1\n  }\n});\nclass StructRowProxyHandler {\n  isExtensible() {\n    return false;\n  }\n  deleteProperty() {\n    return false;\n  }\n  preventExtensions() {\n    return true;\n  }\n  ownKeys(row) {\n    return row[kParent].type.children.map(f => f.name);\n  }\n  has(row, key) {\n    return row[kParent].type.children.findIndex(f => f.name === key) !== -1;\n  }\n  getOwnPropertyDescriptor(row, key) {\n    if (row[kParent].type.children.findIndex(f => f.name === key) !== -1) {\n      return {\n        writable: true,\n        enumerable: true,\n        configurable: true\n      };\n    }\n    return;\n  }\n  get(row, key) {\n    // Look up key in row first\n    if (Reflect.has(row, key)) {\n      return row[key];\n    }\n    const idx = row[kParent].type.children.findIndex(f => f.name === key);\n    if (idx !== -1) {\n      const val = getVisitor.visit(row[kParent].children[idx], row[kRowIndex]);\n      // Cache key/val lookups\n      Reflect.set(row, key, val);\n      return val;\n    }\n  }\n  set(row, key, val) {\n    const idx = row[kParent].type.children.findIndex(f => f.name === key);\n    if (idx !== -1) {\n      setVisitor.visit(row[kParent].children[idx], row[kRowIndex], val);\n      // Cache key/val lookups\n      return Reflect.set(row, key, val);\n    } else if (Reflect.has(row, key) || typeof key === 'symbol') {\n      return Reflect.set(row, key, val);\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["valueToString","instance","getVisitor","setVisitor","kParent","Symbol","for","kRowIndex","StructRow","constructor","parent","rowIndex","Proxy","StructRowProxyHandler","toArray","Object","values","toJSON","i","keys","type","children","json","j","n","length","name","visit","toString","map","key","val","join","iterator","StructRowIterator","data","childIndex","childFields","numChildren","next","done","value","defineProperties","prototype","toStringTag","enumerable","configurable","writable","isExtensible","deleteProperty","preventExtensions","ownKeys","row","f","has","findIndex","getOwnPropertyDescriptor","get","Reflect","idx","set"],"sources":["C:\\Users\\mvlor\\OneDrive\\Desktop\\custom_component\\streamlit_multi_menu\\streamlit_multi_menu\\frontend\\node_modules\\apache-arrow\\src\\row\\struct.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Field } from '../schema.js';\nimport { Struct, TypeMap } from '../type.js';\nimport { valueToString } from '../util/pretty.js';\nimport { instance as getVisitor } from '../visitor/get.js';\nimport { instance as setVisitor } from '../visitor/set.js';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n\nexport type StructRowProxy<T extends TypeMap = any> = StructRow<T> & {\n    [P in keyof T]: T[P]['TValue'];\n} & {\n    [key: symbol]: any;\n};\n\nexport class StructRow<T extends TypeMap = any> {\n\n    declare private [kRowIndex]: number;\n    declare private [kParent]: Data<Struct<T>>;\n\n    constructor(parent: Data<Struct<T>>, rowIndex: number) {\n        this[kParent] = parent;\n        this[kRowIndex] = rowIndex;\n        return new Proxy(this, new StructRowProxyHandler());\n    }\n\n    public toArray() { return Object.values(this.toJSON()); }\n\n    public toJSON() {\n        const i = this[kRowIndex];\n        const parent = this[kParent];\n        const keys = parent.type.children;\n        const json = {} as { [P in string & keyof T]: T[P]['TValue'] };\n        for (let j = -1, n = keys.length; ++j < n;) {\n            json[keys[j].name as string & keyof T] = getVisitor.visit(parent.children[j], i);\n        }\n        return json;\n    }\n\n    public toString() {\n        return `{${[...this].map(([key, val]) =>\n            `${valueToString(key)}: ${valueToString(val)}`\n        ).join(', ')\n            }}`;\n    }\n\n    public [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n\n    [Symbol.iterator](): IterableIterator<[\n        keyof T, { [P in keyof T]: T[P]['TValue'] | null }[keyof T]\n    ]> {\n        return new StructRowIterator(this[kParent], this[kRowIndex]);\n    }\n}\n\nclass StructRowIterator<T extends TypeMap = any>\n    implements IterableIterator<[\n        keyof T, { [P in keyof T]: T[P]['TValue'] | null }[keyof T]\n    ]> {\n\n    declare private rowIndex: number;\n    declare private childIndex: number;\n    declare private numChildren: number;\n    declare private children: Data<any>[];\n    declare private childFields: Field<T[keyof T]>[];\n\n    constructor(data: Data<Struct<T>>, rowIndex: number) {\n        this.childIndex = 0;\n        this.children = data.children;\n        this.rowIndex = rowIndex;\n        this.childFields = data.type.children;\n        this.numChildren = this.childFields.length;\n    }\n\n    [Symbol.iterator]() { return this; }\n\n    next() {\n        const i = this.childIndex;\n        if (i < this.numChildren) {\n            this.childIndex = i + 1;\n            return {\n                done: false,\n                value: [\n                    this.childFields[i].name,\n                    getVisitor.visit(this.children[i], this.rowIndex)\n                ]\n            } as IteratorYieldResult<[any, any]>;\n        }\n        return { done: true, value: null } as IteratorReturnResult<null>;\n    }\n}\n\nObject.defineProperties(StructRow.prototype, {\n    [Symbol.toStringTag]: { enumerable: false, configurable: false, value: 'Row' },\n    [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n    [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n});\n\nclass StructRowProxyHandler<T extends TypeMap = any> implements ProxyHandler<StructRow<T>> {\n    isExtensible() { return false; }\n    deleteProperty() { return false; }\n    preventExtensions() { return true; }\n    ownKeys(row: StructRow<T>) {\n        return row[kParent].type.children.map((f) => f.name);\n    }\n    has(row: StructRow<T>, key: string) {\n        return row[kParent].type.children.findIndex((f) => f.name === key) !== -1;\n    }\n    getOwnPropertyDescriptor(row: StructRow<T>, key: string) {\n        if (row[kParent].type.children.findIndex((f) => f.name === key) !== -1) {\n            return { writable: true, enumerable: true, configurable: true };\n        }\n        return;\n    }\n    get(row: StructRow<T>, key: string) {\n        // Look up key in row first\n        if (Reflect.has(row, key)) {\n            return (row as any)[key];\n        }\n        const idx = row[kParent].type.children.findIndex((f) => f.name === key);\n        if (idx !== -1) {\n            const val = getVisitor.visit(row[kParent].children[idx], row[kRowIndex]);\n            // Cache key/val lookups\n            Reflect.set(row, key, val);\n            return val;\n        }\n    }\n    set(row: StructRow<T>, key: string, val: any) {\n        const idx = row[kParent].type.children.findIndex((f) => f.name === key);\n        if (idx !== -1) {\n            setVisitor.visit(row[kParent].children[idx], row[kRowIndex], val);\n            // Cache key/val lookups\n            return Reflect.set(row, key, val);\n        } else if (Reflect.has(row, key) || typeof key === 'symbol') {\n            return Reflect.set(row, key, val);\n        }\n        return false;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}