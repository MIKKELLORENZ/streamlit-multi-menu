{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * ----------------------------------------------------------------------\n * Data structures for dense tensors\n * Shape data for a single axis in a tensor\n */\nexport class TensorDim {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  static getRootAsTensorDim(bb, obj) {\n    return (obj || new TensorDim()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static getSizePrefixedRootAsTensorDim(bb, obj) {\n    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n    return (obj || new TensorDim()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  /**\n   * Length of dimension\n   */\n  size() {\n    const offset = this.bb.__offset(this.bb_pos, 4);\n    return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n  }\n  name(optionalEncoding) {\n    const offset = this.bb.__offset(this.bb_pos, 6);\n    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n  }\n  static startTensorDim(builder) {\n    builder.startObject(2);\n  }\n  static addSize(builder, size) {\n    builder.addFieldInt64(0, size, builder.createLong(0, 0));\n  }\n  static addName(builder, nameOffset) {\n    builder.addFieldOffset(1, nameOffset, 0);\n  }\n  static endTensorDim(builder) {\n    const offset = builder.endObject();\n    return offset;\n  }\n  static createTensorDim(builder, size, nameOffset) {\n    TensorDim.startTensorDim(builder);\n    TensorDim.addSize(builder, size);\n    TensorDim.addName(builder, nameOffset);\n    return TensorDim.endTensorDim(builder);\n  }\n}","map":{"version":3,"names":["flatbuffers","TensorDim","constructor","bb","bb_pos","__init","i","getRootAsTensorDim","obj","readInt32","position","getSizePrefixedRootAsTensorDim","setPosition","SIZE_PREFIX_LENGTH","size","offset","__offset","readInt64","createLong","name","optionalEncoding","__string","startTensorDim","builder","startObject","addSize","addFieldInt64","addName","nameOffset","addFieldOffset","endTensorDim","endObject","createTensorDim"],"sources":["C:\\Users\\mvlor\\OneDrive\\Desktop\\custom_component\\streamlit_multi_menu\\streamlit_multi_menu\\frontend\\node_modules\\apache-arrow\\src\\fb\\tensor-dim.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for dense tensors\n * Shape data for a single axis in a tensor\n */\nexport class TensorDim {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):TensorDim {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsTensorDim(bb:flatbuffers.ByteBuffer, obj?:TensorDim):TensorDim {\n  return (obj || new TensorDim()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsTensorDim(bb:flatbuffers.ByteBuffer, obj?:TensorDim):TensorDim {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new TensorDim()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Length of dimension\n */\nsize():flatbuffers.Long {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n}\n\n/**\n * Name of the dimension, optional\n */\nname():string|null\nname(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nname(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nstatic startTensorDim(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addSize(builder:flatbuffers.Builder, size:flatbuffers.Long) {\n  builder.addFieldInt64(0, size, builder.createLong(0, 0));\n}\n\nstatic addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, nameOffset, 0);\n}\n\nstatic endTensorDim(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createTensorDim(builder:flatbuffers.Builder, size:flatbuffers.Long, nameOffset:flatbuffers.Offset):flatbuffers.Offset {\n  TensorDim.startTensorDim(builder);\n  TensorDim.addSize(builder, size);\n  TensorDim.addName(builder, nameOffset);\n  return TensorDim.endTensorDim(builder);\n}\n}\n"],"mappings":"AAAA;AAEA,OAAO,KAAKA,WAAW,MAAM,aAAa;AAE1C;;;;;AAKA,OAAM,MAAOC,SAAS;EAAtBC,YAAA;IACE,KAAAC,EAAE,GAAgC,IAAI;IACtC,KAAAC,MAAM,GAAG,CAAC;EAyDZ;EAxDAC,MAAMA,CAACC,CAAQ,EAAEH,EAAyB;IACxC,IAAI,CAACC,MAAM,GAAGE,CAAC;IACf,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OAAOI,kBAAkBA,CAACJ,EAAyB,EAAEK,GAAc;IACjE,OAAO,CAACA,GAAG,IAAI,IAAIP,SAAS,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EACzF;EAEA,OAAOQ,8BAA8BA,CAACR,EAAyB,EAAEK,GAAc;IAC7EL,EAAE,CAACS,WAAW,CAACT,EAAE,CAACO,QAAQ,EAAE,GAAGV,WAAW,CAACa,kBAAkB,CAAC;IAC9D,OAAO,CAACL,GAAG,IAAI,IAAIP,SAAS,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EACzF;EAEA;;;EAGAW,IAAIA,CAAA;IACF,MAAMC,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACa,QAAQ,CAAC,IAAI,CAACZ,MAAM,EAAE,CAAC,CAAC;IAChD,OAAOW,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACc,SAAS,CAAC,IAAI,CAACb,MAAM,GAAGW,MAAM,CAAC,GAAG,IAAI,CAACZ,EAAG,CAACe,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;EACtF;EAOAC,IAAIA,CAACC,gBAAqB;IACxB,MAAML,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACa,QAAQ,CAAC,IAAI,CAACZ,MAAM,EAAE,CAAC,CAAC;IAChD,OAAOW,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACkB,QAAQ,CAAC,IAAI,CAACjB,MAAM,GAAGW,MAAM,EAAEK,gBAAgB,CAAC,GAAG,IAAI;EAClF;EAEA,OAAOE,cAAcA,CAACC,OAA2B;IAC/CA,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC;EACxB;EAEA,OAAOC,OAAOA,CAACF,OAA2B,EAAET,IAAqB;IAC/DS,OAAO,CAACG,aAAa,CAAC,CAAC,EAAEZ,IAAI,EAAES,OAAO,CAACL,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D;EAEA,OAAOS,OAAOA,CAACJ,OAA2B,EAAEK,UAA6B;IACvEL,OAAO,CAACM,cAAc,CAAC,CAAC,EAAED,UAAU,EAAE,CAAC,CAAC;EAC1C;EAEA,OAAOE,YAAYA,CAACP,OAA2B;IAC7C,MAAMR,MAAM,GAAGQ,OAAO,CAACQ,SAAS,EAAE;IAClC,OAAOhB,MAAM;EACf;EAEA,OAAOiB,eAAeA,CAACT,OAA2B,EAAET,IAAqB,EAAEc,UAA6B;IACtG3B,SAAS,CAACqB,cAAc,CAACC,OAAO,CAAC;IACjCtB,SAAS,CAACwB,OAAO,CAACF,OAAO,EAAET,IAAI,CAAC;IAChCb,SAAS,CAAC0B,OAAO,CAACJ,OAAO,EAAEK,UAAU,CAAC;IACtC,OAAO3B,SAAS,CAAC6B,YAAY,CAACP,OAAO,CAAC;EACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}