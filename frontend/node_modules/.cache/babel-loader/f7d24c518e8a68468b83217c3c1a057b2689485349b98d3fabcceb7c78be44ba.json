{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __awaiter } from \"tslib\";\nimport { AsyncByteQueue } from '../../io/stream.mjs';\nimport { RecordBatchReader } from '../../ipc/reader.mjs';\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n  const queue = new AsyncByteQueue();\n  let reader = null;\n  const readable = new ReadableStream({\n    cancel() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield queue.close();\n      });\n    },\n    start(controller) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield next(controller, reader || (reader = yield open()));\n      });\n    },\n    pull(controller) {\n      return __awaiter(this, void 0, void 0, function* () {\n        reader ? yield next(controller, reader) : controller.close();\n      });\n    }\n  });\n  return {\n    writable: new WritableStream(queue, Object.assign({\n      'highWaterMark': Math.pow(2, 14)\n    }, writableStrategy)),\n    readable\n  };\n  function open() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield (yield RecordBatchReader.from(queue)).open(readableStrategy);\n    });\n  }\n  function next(controller, reader) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let size = controller.desiredSize;\n      let r = null;\n      while (!(r = yield reader.next()).done) {\n        controller.enqueue(r.value);\n        if (size != null && --size <= 0) {\n          return;\n        }\n      }\n      controller.close();\n    });\n  }\n}","map":{"version":3,"names":["AsyncByteQueue","RecordBatchReader","recordBatchReaderThroughDOMStream","writableStrategy","readableStrategy","queue","reader","readable","ReadableStream","cancel","close","start","controller","next","open","pull","writable","WritableStream","Object","assign","Math","pow","from","size","desiredSize","r","done","enqueue","value"],"sources":["C:\\Users\\mvlor\\OneDrive\\Desktop\\custom_component\\streamlit_multi_menu\\template\\streamlit_multi_menu\\frontend\\node_modules\\apache-arrow\\src\\io\\whatwg\\reader.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { TypeMap } from '../../type.js';\nimport { RecordBatch } from '../../recordbatch.js';\nimport { AsyncByteQueue } from '../../io/stream.js';\nimport { RecordBatchReader } from '../../ipc/reader.js';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends TypeMap = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASA,cAAc,QAAQ,qBAAqB;AACpD,SAASC,iBAAiB,QAAQ,sBAAsB;AAExD;AACA,OAAM,SAAUC,iCAAiCA,CAA0BC,gBAA4C,EAAEC,gBAA2C;EAEhK,MAAMC,KAAK,GAAG,IAAIL,cAAc,EAAE;EAClC,IAAIM,MAAM,GAAgC,IAAI;EAE9C,MAAMC,QAAQ,GAAG,IAAIC,cAAc,CAAiB;IAC1CC,MAAMA,CAAA;;QAAK,MAAMJ,KAAK,CAACK,KAAK,EAAE;MAAE,CAAC;KAAA;IACjCC,KAAKA,CAACC,UAAU;;QAAI,MAAMC,IAAI,CAACD,UAAU,EAAEN,MAAM,KAAKA,MAAM,GAAG,MAAMQ,IAAI,EAAE,CAAC,CAAC;MAAE,CAAC;KAAA;IAChFC,IAAIA,CAACH,UAAU;;QAAIN,MAAM,GAAG,MAAMO,IAAI,CAACD,UAAU,EAAEN,MAAM,CAAC,GAAGM,UAAU,CAACF,KAAK,EAAE;MAAE,CAAC;;GAC3F,CAAC;EAEF,OAAO;IAAEM,QAAQ,EAAE,IAAIC,cAAc,CAACZ,KAAK,EAAAa,MAAA,CAAAC,MAAA;MAAI,eAAe,EAAEC,IAAA,CAAAC,GAAA,EAAC,EAAI,EAAE;IAAA,GAAKlB,gBAAgB,EAAG;IAAEI;EAAQ,CAAE;EAE3G,SAAeO,IAAIA,CAAA;;MACf,OAAO,MAAM,CAAC,MAAMb,iBAAiB,CAACqB,IAAI,CAAIjB,KAAK,CAAC,EAAES,IAAI,CAACV,gBAAgB,CAAC;IAChF,CAAC;;EAED,SAAeS,IAAIA,CAACD,UAA2D,EAAEN,MAA4B;;MACzG,IAAIiB,IAAI,GAAGX,UAAU,CAACY,WAAW;MACjC,IAAIC,CAAC,GAA0C,IAAI;MACnD,OAAO,CAAC,CAACA,CAAC,GAAG,MAAMnB,MAAM,CAACO,IAAI,EAAE,EAAEa,IAAI,EAAE;QACpCd,UAAU,CAACe,OAAO,CAACF,CAAC,CAACG,KAAK,CAAC;QAC3B,IAAIL,IAAI,IAAI,IAAI,IAAI,EAAEA,IAAI,IAAI,CAAC,EAAE;UAC7B;;;MAGRX,UAAU,CAACF,KAAK,EAAE;IACtB,CAAC;;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}