{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nexport class FixedSizeBinary {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  static getRootAsFixedSizeBinary(bb, obj) {\n    return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static getSizePrefixedRootAsFixedSizeBinary(bb, obj) {\n    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n    return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  /**\n   * Number of bytes per value\n   */\n  byteWidth() {\n    const offset = this.bb.__offset(this.bb_pos, 4);\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n  }\n  static startFixedSizeBinary(builder) {\n    builder.startObject(1);\n  }\n  static addByteWidth(builder, byteWidth) {\n    builder.addFieldInt32(0, byteWidth, 0);\n  }\n  static endFixedSizeBinary(builder) {\n    const offset = builder.endObject();\n    return offset;\n  }\n  static createFixedSizeBinary(builder, byteWidth) {\n    FixedSizeBinary.startFixedSizeBinary(builder);\n    FixedSizeBinary.addByteWidth(builder, byteWidth);\n    return FixedSizeBinary.endFixedSizeBinary(builder);\n  }\n}","map":{"version":3,"names":["flatbuffers","FixedSizeBinary","constructor","bb","bb_pos","__init","i","getRootAsFixedSizeBinary","obj","readInt32","position","getSizePrefixedRootAsFixedSizeBinary","setPosition","SIZE_PREFIX_LENGTH","byteWidth","offset","__offset","startFixedSizeBinary","builder","startObject","addByteWidth","addFieldInt32","endFixedSizeBinary","endObject","createFixedSizeBinary"],"sources":["C:\\Users\\mvlor\\OneDrive\\Desktop\\custom_component\\multi_menu\\template\\multi_menu\\frontend\\node_modules\\apache-arrow\\src\\fb\\fixed-size-binary.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class FixedSizeBinary {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):FixedSizeBinary {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsFixedSizeBinary(bb:flatbuffers.ByteBuffer, obj?:FixedSizeBinary):FixedSizeBinary {\n  return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsFixedSizeBinary(bb:flatbuffers.ByteBuffer, obj?:FixedSizeBinary):FixedSizeBinary {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Number of bytes per value\n */\nbyteWidth():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n}\n\nstatic startFixedSizeBinary(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addByteWidth(builder:flatbuffers.Builder, byteWidth:number) {\n  builder.addFieldInt32(0, byteWidth, 0);\n}\n\nstatic endFixedSizeBinary(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createFixedSizeBinary(builder:flatbuffers.Builder, byteWidth:number):flatbuffers.Offset {\n  FixedSizeBinary.startFixedSizeBinary(builder);\n  FixedSizeBinary.addByteWidth(builder, byteWidth);\n  return FixedSizeBinary.endFixedSizeBinary(builder);\n}\n}\n"],"mappings":"AAAA;AAEA,OAAO,KAAKA,WAAW,MAAM,aAAa;AAE1C,OAAM,MAAOC,eAAe;EAA5BC,YAAA;IACE,KAAAC,EAAE,GAAgC,IAAI;IACtC,KAAAC,MAAM,GAAG,CAAC;EA0CZ;EAzCAC,MAAMA,CAACC,CAAQ,EAAEH,EAAyB;IACxC,IAAI,CAACC,MAAM,GAAGE,CAAC;IACf,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OAAOI,wBAAwBA,CAACJ,EAAyB,EAAEK,GAAoB;IAC7E,OAAO,CAACA,GAAG,IAAI,IAAIP,eAAe,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EAC/F;EAEA,OAAOQ,oCAAoCA,CAACR,EAAyB,EAAEK,GAAoB;IACzFL,EAAE,CAACS,WAAW,CAACT,EAAE,CAACO,QAAQ,EAAE,GAAGV,WAAW,CAACa,kBAAkB,CAAC;IAC9D,OAAO,CAACL,GAAG,IAAI,IAAIP,eAAe,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EAC/F;EAEA;;;EAGAW,SAASA,CAAA;IACP,MAAMC,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACa,QAAQ,CAAC,IAAI,CAACZ,MAAM,EAAE,CAAC,CAAC;IAChD,OAAOW,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACM,SAAS,CAAC,IAAI,CAACL,MAAM,GAAGW,MAAM,CAAC,GAAG,CAAC;EAC9D;EAEA,OAAOE,oBAAoBA,CAACC,OAA2B;IACrDA,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC;EACxB;EAEA,OAAOC,YAAYA,CAACF,OAA2B,EAAEJ,SAAgB;IAC/DI,OAAO,CAACG,aAAa,CAAC,CAAC,EAAEP,SAAS,EAAE,CAAC,CAAC;EACxC;EAEA,OAAOQ,kBAAkBA,CAACJ,OAA2B;IACnD,MAAMH,MAAM,GAAGG,OAAO,CAACK,SAAS,EAAE;IAClC,OAAOR,MAAM;EACf;EAEA,OAAOS,qBAAqBA,CAACN,OAA2B,EAAEJ,SAAgB;IACxEb,eAAe,CAACgB,oBAAoB,CAACC,OAAO,CAAC;IAC7CjB,eAAe,CAACmB,YAAY,CAACF,OAAO,EAAEJ,SAAS,CAAC;IAChD,OAAOb,eAAe,CAACqB,kBAAkB,CAACJ,OAAO,CAAC;EACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}