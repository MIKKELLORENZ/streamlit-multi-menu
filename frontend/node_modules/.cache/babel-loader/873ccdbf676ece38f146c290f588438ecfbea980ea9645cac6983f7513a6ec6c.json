{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mvlor\\\\OneDrive\\\\Desktop\\\\custom_component\\\\multi_menu\\\\template\\\\multi_menu\\\\frontend\\\\src\\\\MultiMenu.tsx\";\nimport React from \"react\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction darkenColor(color, percent) {\n  let num = parseInt(color.replace(\"#\", \"\"), 16),\n    amt = Math.round(2.55 * percent),\n    R = (num >> 16) - amt,\n    G = (num >> 8 & 0x00FF) - amt,\n    B = (num & 0x0000FF) - amt;\n  return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);\n}\nclass MultiMenu extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.onSubMenuClicked = subMenuName => {\n      Streamlit.setComponentValue(subMenuName);\n    };\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/icon?family=Material+Icons';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    this.linkElement = link; // Assuming linkElement is declared in your class\n  }\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    if (this.linkElement) {\n      document.head.removeChild(this.linkElement);\n    }\n  }\n  render() {\n    const {\n      menu_titles,\n      menu_titles_font_size,\n      sub_menus,\n      use_container_width,\n      sub_menu_color = '#F0F2F6',\n      // Default value if not provided\n      sub_menu_font_size,\n      sub_menu_button_gap = 10,\n      // Default value if not provided\n      sub_menu_font_color = \"#31333F\",\n      // Default value if not provided\n      sub_menu_icons = {} // Default value if not provided\n    } = this.props.args;\n    const componentStyle = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: '100%'\n    };\n    const titleContainerStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center',\n      flex: use_container_width ? 1 : undefined,\n      margin: '0 5px'\n    };\n    const titleStyle = {\n      marginBottom: '5px',\n      fontWeight: 'bold',\n      fontSize: menu_titles_font_size\n    };\n    const lineStyle = {\n      height: '1.25px',\n      backgroundColor: '#BDBFC3',\n      width: '100%'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: componentStyle,\n      children: menu_titles.map(title => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: titleContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: titleStyle,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: lineStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), sub_menus[title] && sub_menus[title].map((subMenu, index) => {\n          const iconName = sub_menu_icons[title] && sub_menu_icons[title][index] ? sub_menu_icons[title][index] : '';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: sub_menu_button_gap,\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.onSubMenuClicked(subMenu),\n              style: {\n                cursor: \"pointer\",\n                width: \"100%\",\n                borderRadius: '8px',\n                backgroundColor: sub_menu_color,\n                color: sub_menu_font_color,\n                border: \"none\",\n                padding: '5px 5px',\n                fontSize: sub_menu_font_size\n              },\n              children: [iconName && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                style: {\n                  verticalAlign: 'middle',\n                  marginRight: '8px'\n                },\n                children: iconName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this), subMenu]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, subMenu, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this);\n        })]\n      }, title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default _c = withStreamlitConnection(MultiMenu);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","darkenColor","color","percent","num","parseInt","replace","amt","Math","round","R","G","B","toString","slice","MultiMenu","constructor","args","onSubMenuClicked","subMenuName","setComponentValue","componentDidMount","link","document","createElement","href","rel","head","appendChild","linkElement","componentWillUnmount","removeChild","render","menu_titles","menu_titles_font_size","sub_menus","use_container_width","sub_menu_color","sub_menu_font_size","sub_menu_button_gap","sub_menu_font_color","sub_menu_icons","props","componentStyle","display","flexDirection","width","titleContainerStyle","alignItems","textAlign","flex","undefined","margin","titleStyle","marginBottom","fontWeight","fontSize","lineStyle","height","backgroundColor","style","children","map","title","fileName","_jsxFileName","lineNumber","columnNumber","subMenu","index","iconName","marginTop","onClick","cursor","borderRadius","border","padding","className","verticalAlign","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/mvlor/OneDrive/Desktop/custom_component/multi_menu/template/multi_menu/frontend/src/MultiMenu.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\n\ninterface State {}\n\nfunction darkenColor(color: string, percent: number): string {\n  let num = parseInt(color.replace(\"#\", \"\"), 16),\n    amt = Math.round(2.55 * percent),\n    R = (num >> 16) - amt,\n    G = ((num >> 8) & 0x00FF) - amt,\n    B = (num & 0x0000FF) - amt;\n\n  return \"#\" + (\n    0x1000000 +\n    (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +\n    (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +\n    (B < 255 ? B < 1 ? 0 : B : 255)\n  ).toString(16).slice(1);\n}\n\nclass MultiMenu extends StreamlitComponentBase<State> {\n  componentDidMount() {\n    super.componentDidMount();\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/icon?family=Material+Icons';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    this.linkElement = link; // Assuming linkElement is declared in your class\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    if (this.linkElement) {\n      document.head.removeChild(this.linkElement);\n    }\n  }\n\n  render(): ReactNode {\n    const {\n      menu_titles,\n      menu_titles_font_size,\n      sub_menus,\n      use_container_width,\n      sub_menu_color = '#F0F2F6', // Default value if not provided\n      sub_menu_font_size,\n      sub_menu_button_gap = 10, // Default value if not provided\n      sub_menu_font_color = \"#31333F\", // Default value if not provided\n      sub_menu_icons = {}, // Default value if not provided\n    } = this.props.args;\n\n    const componentStyle: React.CSSProperties = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: '100%',\n    };\n\n    const titleContainerStyle: React.CSSProperties = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center',\n      flex: use_container_width ? 1 : undefined,\n      margin: '0 5px',\n    };\n\n    const titleStyle: React.CSSProperties = {\n      marginBottom: '5px',\n      fontWeight: 'bold',\n      fontSize: menu_titles_font_size,\n    };\n\n    const lineStyle: React.CSSProperties = {\n      height: '1.25px',\n      backgroundColor: '#BDBFC3',\n      width: '100%',\n    };\n\n    return (\n      <div style={componentStyle}>\n        {menu_titles.map((title: string) => (\n          <div key={title} style={titleContainerStyle}>\n            <h3 style={titleStyle}>{title}</h3>\n            <div style={lineStyle}></div>\n            {sub_menus[title] && sub_menus[title].map((subMenu: string, index: number) => {\n              const iconName = sub_menu_icons[title] && sub_menu_icons[title][index] ? sub_menu_icons[title][index] : '';\n              return (\n                <div key={subMenu} style={{ marginTop: sub_menu_button_gap, width:'100%'}}>\n                  <button\n                    onClick={() => this.onSubMenuClicked(subMenu)}\n                    style={{ \n                      cursor: \"pointer\", \n                      width: \"100%\", \n                      borderRadius: '8px',\n                      backgroundColor: sub_menu_color,\n                      color: sub_menu_font_color,\n                      border: \"none\",\n                      padding: '5px 5px',\n                      fontSize: sub_menu_font_size,\n                    }}\n                  >\n                    {iconName && (\n                      <i className=\"material-icons\" style={{verticalAlign: 'middle', marginRight: '8px'}}>\n                        {iconName}\n                      </i>\n                    )}\n                    {subMenu}\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private onSubMenuClicked = (subMenuName: string): void => {\n    Streamlit.setComponentValue(subMenuName);\n  };\n}\n\nexport default withStreamlitConnection(MultiMenu);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}