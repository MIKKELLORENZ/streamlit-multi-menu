{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nexport class Int {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  static getRootAsInt(bb, obj) {\n    return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static getSizePrefixedRootAsInt(bb, obj) {\n    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n    return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  bitWidth() {\n    const offset = this.bb.__offset(this.bb_pos, 4);\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n  }\n  isSigned() {\n    const offset = this.bb.__offset(this.bb_pos, 6);\n    return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n  }\n  static startInt(builder) {\n    builder.startObject(2);\n  }\n  static addBitWidth(builder, bitWidth) {\n    builder.addFieldInt32(0, bitWidth, 0);\n  }\n  static addIsSigned(builder, isSigned) {\n    builder.addFieldInt8(1, +isSigned, +false);\n  }\n  static endInt(builder) {\n    const offset = builder.endObject();\n    return offset;\n  }\n  static createInt(builder, bitWidth, isSigned) {\n    Int.startInt(builder);\n    Int.addBitWidth(builder, bitWidth);\n    Int.addIsSigned(builder, isSigned);\n    return Int.endInt(builder);\n  }\n}","map":{"version":3,"names":["flatbuffers","Int","constructor","bb","bb_pos","__init","i","getRootAsInt","obj","readInt32","position","getSizePrefixedRootAsInt","setPosition","SIZE_PREFIX_LENGTH","bitWidth","offset","__offset","isSigned","readInt8","startInt","builder","startObject","addBitWidth","addFieldInt32","addIsSigned","addFieldInt8","endInt","endObject","createInt"],"sources":["C:\\Users\\mvlor\\OneDrive\\Desktop\\custom_component\\streamlit_multi_menu\\streamlit_multi_menu\\frontend\\node_modules\\apache-arrow\\src\\fb\\int.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class Int {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Int {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsInt(bb:flatbuffers.ByteBuffer, obj?:Int):Int {\n  return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsInt(bb:flatbuffers.ByteBuffer, obj?:Int):Int {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nbitWidth():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n}\n\nisSigned():boolean {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n}\n\nstatic startInt(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addBitWidth(builder:flatbuffers.Builder, bitWidth:number) {\n  builder.addFieldInt32(0, bitWidth, 0);\n}\n\nstatic addIsSigned(builder:flatbuffers.Builder, isSigned:boolean) {\n  builder.addFieldInt8(1, +isSigned, +false);\n}\n\nstatic endInt(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createInt(builder:flatbuffers.Builder, bitWidth:number, isSigned:boolean):flatbuffers.Offset {\n  Int.startInt(builder);\n  Int.addBitWidth(builder, bitWidth);\n  Int.addIsSigned(builder, isSigned);\n  return Int.endInt(builder);\n}\n}\n"],"mappings":"AAAA;AAEA,OAAO,KAAKA,WAAW,MAAM,aAAa;AAE1C,OAAM,MAAOC,GAAG;EAAhBC,YAAA;IACE,KAAAC,EAAE,GAAgC,IAAI;IACtC,KAAAC,MAAM,GAAG,CAAC;EAiDZ;EAhDAC,MAAMA,CAACC,CAAQ,EAAEH,EAAyB;IACxC,IAAI,CAACC,MAAM,GAAGE,CAAC;IACf,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OAAOI,YAAYA,CAACJ,EAAyB,EAAEK,GAAQ;IACrD,OAAO,CAACA,GAAG,IAAI,IAAIP,GAAG,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EACnF;EAEA,OAAOQ,wBAAwBA,CAACR,EAAyB,EAAEK,GAAQ;IACjEL,EAAE,CAACS,WAAW,CAACT,EAAE,CAACO,QAAQ,EAAE,GAAGV,WAAW,CAACa,kBAAkB,CAAC;IAC9D,OAAO,CAACL,GAAG,IAAI,IAAIP,GAAG,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EACnF;EAEAW,QAAQA,CAAA;IACN,MAAMC,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACa,QAAQ,CAAC,IAAI,CAACZ,MAAM,EAAE,CAAC,CAAC;IAChD,OAAOW,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACM,SAAS,CAAC,IAAI,CAACL,MAAM,GAAGW,MAAM,CAAC,GAAG,CAAC;EAC9D;EAEAE,QAAQA,CAAA;IACN,MAAMF,MAAM,GAAG,IAAI,CAACZ,EAAG,CAACa,QAAQ,CAAC,IAAI,CAACZ,MAAM,EAAE,CAAC,CAAC;IAChD,OAAOW,MAAM,GAAG,CAAC,CAAC,IAAI,CAACZ,EAAG,CAACe,QAAQ,CAAC,IAAI,CAACd,MAAM,GAAGW,MAAM,CAAC,GAAG,KAAK;EACnE;EAEA,OAAOI,QAAQA,CAACC,OAA2B;IACzCA,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC;EACxB;EAEA,OAAOC,WAAWA,CAACF,OAA2B,EAAEN,QAAe;IAC7DM,OAAO,CAACG,aAAa,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC;EACvC;EAEA,OAAOU,WAAWA,CAACJ,OAA2B,EAAEH,QAAgB;IAC9DG,OAAO,CAACK,YAAY,CAAC,CAAC,EAAE,CAACR,QAAQ,EAAE,CAAC,KAAK,CAAC;EAC5C;EAEA,OAAOS,MAAMA,CAACN,OAA2B;IACvC,MAAML,MAAM,GAAGK,OAAO,CAACO,SAAS,EAAE;IAClC,OAAOZ,MAAM;EACf;EAEA,OAAOa,SAASA,CAACR,OAA2B,EAAEN,QAAe,EAAEG,QAAgB;IAC7EhB,GAAG,CAACkB,QAAQ,CAACC,OAAO,CAAC;IACrBnB,GAAG,CAACqB,WAAW,CAACF,OAAO,EAAEN,QAAQ,CAAC;IAClCb,GAAG,CAACuB,WAAW,CAACJ,OAAO,EAAEH,QAAQ,CAAC;IAClC,OAAOhB,GAAG,CAACyB,MAAM,CAACN,OAAO,CAAC;EAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}