{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mvlor\\\\OneDrive\\\\Desktop\\\\custom_component\\\\multi_menu\\\\template\\\\my_component\\\\frontend\\\\src\\\\MyComponent.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Function to darken a HEX color\n// Corrected function with explicit types for parameters\nfunction darkenColor(color, percent) {\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\n    amt = Math.round(2.55 * percent),\n    R = (num >> 16) - amt,\n    G = (num >> 8 & 0x00FF) - amt,\n    B = (num & 0x0000FF) - amt;\n  return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);\n}\nclass MyComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.render = () => {\n      const menu_titles = this.props.args[\"menu_titles\"];\n      const sub_menus = this.props.args[\"sub_menus\"];\n      const use_container_width = this.props.args[\"use_container_width\"];\n      const sub_menu_color = this.props.args[\"sub_menu_color\"]; // Custom color provided by the user\n      const sub_menu_font_size = this.props.args[\"sub_menu_font_size\"];\n      const sub_menu_imgs = this.props.args[\"sub_menu_imgs\"];\n      const safeSubMenuColor = sub_menu_color || '#F0F2F6'; // Default color if sub_menu_color is undefined\n      const darkerSubMenuColor = darkenColor(safeSubMenuColor, 10);\n      const componentStyle = {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: '100%'\n        // Apply sans-serif font to the entire component\n      };\n      const titleContainerStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        textAlign: 'center',\n        flex: use_container_width ? 1 : undefined,\n        margin: '0 5px'\n      };\n      const titleStyle = {\n        marginBottom: '5px'\n      };\n      const lineStyle = {\n        height: '1.25px',\n        backgroundColor: '#BDBFC3',\n        width: '100%'\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: componentStyle,\n        children: menu_titles.map((title, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: titleContainerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: titleStyle,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: lineStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), sub_menus[title] && sub_menus[title].length > 0 && sub_menus[title].map((subMenu, subMenuIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.onSubMenuClicked(subMenu),\n              onMouseOver: e => e.currentTarget.style.backgroundColor = darkenColor(safeSubMenuColor, 20),\n              onMouseOut: e => e.currentTarget.style.backgroundColor = safeSubMenuColor,\n              style: {\n                cursor: \"pointer\",\n                width: \"100%\",\n                borderRadius: '8px',\n                backgroundColor: sub_menu_color,\n                color: \"#31333F\",\n                border: \"1px solid #FFFFFF\",\n                padding: '5px 5px',\n                fontSize: sub_menu_font_size,\n                backgroundImage: `url(${sub_menu_imgs[title][subMenuIndex]})`,\n                // Use the correct image URL\n                backgroundSize: 'cover',\n                // Cover the entire button area\n                backgroundPosition: 'center',\n                // Center the background image\n                backgroundRepeat: 'no-repeat',\n                // Do not repeat the image\n\n                transition: 'background-color 0.05s'\n              },\n              children: subMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, subMenu, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))]\n        }, title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this);\n    };\n    this.onSubMenuClicked = subMenuName => {\n      // Handle sub menu click\n      Streamlit.setComponentValue(subMenuName);\n    };\n  }\n}\nexport default _c = withStreamlitConnection(MyComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","jsxDEV","_jsxDEV","darkenColor","color","percent","num","parseInt","replace","amt","Math","round","R","G","B","toString","slice","MyComponent","constructor","args","render","menu_titles","props","sub_menus","use_container_width","sub_menu_color","sub_menu_font_size","sub_menu_imgs","safeSubMenuColor","darkerSubMenuColor","componentStyle","display","flexDirection","width","titleContainerStyle","alignItems","textAlign","flex","undefined","margin","titleStyle","marginBottom","lineStyle","height","backgroundColor","style","children","map","title","index","fileName","_jsxFileName","lineNumber","columnNumber","length","subMenu","subMenuIndex","marginTop","onClick","onSubMenuClicked","onMouseOver","e","currentTarget","onMouseOut","cursor","borderRadius","border","padding","fontSize","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","transition","subMenuName","setComponentValue","_c","$RefreshReg$"],"sources":["C:/Users/mvlor/OneDrive/Desktop/custom_component/multi_menu/template/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\n\ninterface State {}\n\n// Function to darken a HEX color\n// Corrected function with explicit types for parameters\nfunction darkenColor(color: string, percent: number): string {\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\n        amt = Math.round(2.55 * percent),\n        R = (num >> 16) - amt,\n        G = (num >> 8 & 0x00FF) - amt,\n        B = (num & 0x0000FF) - amt;\n  return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);\n}\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public render = (): ReactNode => {\n    const menu_titles = this.props.args[\"menu_titles\"];\n    const sub_menus = this.props.args[\"sub_menus\"];\n    const use_container_width = this.props.args[\"use_container_width\"];\n    const sub_menu_color = this.props.args[\"sub_menu_color\"]; // Custom color provided by the user\n    const sub_menu_font_size = this.props.args[\"sub_menu_font_size\"]; \n    const sub_menu_imgs = this.props.args[\"sub_menu_imgs\"]\n    const safeSubMenuColor = sub_menu_color || '#F0F2F6'; // Default color if sub_menu_color is undefined\n    const darkerSubMenuColor = darkenColor(safeSubMenuColor, 10);\n\n    const componentStyle: React.CSSProperties = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: '100%',\n     // Apply sans-serif font to the entire component\n    };\n\n    const titleContainerStyle: React.CSSProperties = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center',\n      flex: use_container_width ? 1 : undefined,\n      margin: '0 5px',\n    };\n\n    const titleStyle: React.CSSProperties = {\n      marginBottom: '5px',\n    };\n\n    const lineStyle: React.CSSProperties = {\n      height: '1.25px',\n      backgroundColor: '#BDBFC3',\n      width: '100%',\n    };\n\n    return (\n      <div style={componentStyle}>\n        {menu_titles.map((title: string, index: number) => (\n          <div key={title} style={titleContainerStyle}>\n            <h3 style={titleStyle}>{title}</h3>\n            <div style={lineStyle}></div>\n            {sub_menus[title] && sub_menus[title].length > 0 && \n            sub_menus[title].map((subMenu: string, subMenuIndex: number) => (\n              <div key={subMenu} style={{ marginTop: '10px', width:'100%'}}>\n                <button\n                  onClick={() => this.onSubMenuClicked(subMenu)}\n                  onMouseOver={(e) => e.currentTarget.style.backgroundColor = darkenColor(safeSubMenuColor, 20)}\n                  onMouseOut={(e) => e.currentTarget.style.backgroundColor = safeSubMenuColor}\n                  style={{ \n                    cursor: \"pointer\", \n                    width: \"100%\", \n                    borderRadius: '8px',\n                    backgroundColor: sub_menu_color,\n                    color: \"#31333F\",\n                    border: \"1px solid #FFFFFF\",\n                    padding: '5px 5px',\n                    fontSize: sub_menu_font_size,\n                    backgroundImage: `url(${sub_menu_imgs[title][subMenuIndex]})`, // Use the correct image URL\n                    backgroundSize: 'cover', // Cover the entire button area\n                    backgroundPosition: 'center', // Center the background image\n                    backgroundRepeat: 'no-repeat', // Do not repeat the image\n                    \n                    transition: 'background-color 0.05s',\n                  }}\n                >\n                  {subMenu}\n                </button>\n              </div>\n            ))\n          }\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  private onSubMenuClicked = (subMenuName: string): void => {\n    // Handle sub menu click\n    Streamlit.setComponentValue(subMenuName);\n  };\n}\n\nexport default withStreamlitConnection(MyComponent);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}