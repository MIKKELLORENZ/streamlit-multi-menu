{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mvlor\\\\OneDrive\\\\Desktop\\\\custom_component\\\\multi_menu\\\\template\\\\multi_menu\\\\frontend\\\\src\\\\MultiMenu.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\n\n// No longer using the custom hook since we'll integrate the stylesheet link directly into the render method\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction darkenColor(color, percent) {\n  let num = parseInt(color.replace(\"#\", \"\"), 16),\n    amt = Math.round(2.55 * percent),\n    R = (num >> 16) - amt,\n    G = (num >> 8 & 0x00FF) - amt,\n    B = (num & 0x0000FF) - amt;\n  return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);\n}\nclass MultiMenu extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.render = () => {\n      const {\n        menu_titles,\n        menu_titles_font_size,\n        sub_menus,\n        use_container_width,\n        sub_menu_color,\n        sub_menu_font_size,\n        sub_menu_button_gap,\n        sub_menu_font_color,\n        sub_menu_imgs,\n        sub_menu_icons\n      } = this.props.args;\n      const safeSubMenuColor = sub_menu_color || '#F0F2F6'; // Default color if sub_menu_color is undefined\n      const darkerSubMenuColor = darkenColor(safeSubMenuColor, 10);\n      const componentStyle = {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: '100%'\n      };\n      const titleContainerStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        textAlign: 'center',\n        flex: use_container_width ? 1 : undefined,\n        margin: '0 5px'\n      };\n      const titleStyle = {\n        marginBottom: '5px',\n        fontWeight: 'bold',\n        fontSize: menu_titles_font_size\n      };\n      const lineStyle = {\n        height: '1.25px',\n        backgroundColor: '#BDBFC3',\n        width: '100%'\n      };\n\n      // Ensure the Material Icons stylesheet is available\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n          rel: \"stylesheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: componentStyle,\n          children: menu_titles.map((title, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: titleContainerStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: titleStyle,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: lineStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), sub_menus[title] && sub_menus[title].map((subMenu, subMenuIndex) => {\n              const iconName = sub_menu_icons[title] ? sub_menu_icons[title][subMenuIndex] : '';\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: sub_menu_button_gap,\n                  width: '100%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.onSubMenuClicked(subMenu),\n                  style: {\n                    cursor: \"pointer\",\n                    width: \"100%\",\n                    borderRadius: '8px',\n                    backgroundColor: safeSubMenuColor,\n                    color: sub_menu_font_color,\n                    border: \"none\",\n                    padding: '5px 5px',\n                    fontSize: sub_menu_font_size\n                  },\n                  children: [iconName && /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"material-icons\",\n                    style: {\n                      verticalAlign: 'middle',\n                      marginRight: '8px'\n                    },\n                    children: iconName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 36\n                  }, this), subMenu]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this)\n              }, subMenu + subMenuIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this);\n            })]\n          }, title, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n    this.onSubMenuClicked = subMenuName => {\n      Streamlit.setComponentValue(subMenuName);\n    };\n  }\n}\nexport default _c = withStreamlitConnection(MultiMenu);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","jsxDEV","_jsxDEV","Fragment","_Fragment","darkenColor","color","percent","num","parseInt","replace","amt","Math","round","R","G","B","toString","slice","MultiMenu","constructor","args","render","menu_titles","menu_titles_font_size","sub_menus","use_container_width","sub_menu_color","sub_menu_font_size","sub_menu_button_gap","sub_menu_font_color","sub_menu_imgs","sub_menu_icons","props","safeSubMenuColor","darkerSubMenuColor","componentStyle","display","flexDirection","width","titleContainerStyle","alignItems","textAlign","flex","undefined","margin","titleStyle","marginBottom","fontWeight","fontSize","lineStyle","height","backgroundColor","children","href","rel","fileName","_jsxFileName","lineNumber","columnNumber","style","map","title","index","subMenu","subMenuIndex","iconName","marginTop","onClick","onSubMenuClicked","cursor","borderRadius","border","padding","className","verticalAlign","marginRight","subMenuName","setComponentValue","_c","$RefreshReg$"],"sources":["C:/Users/mvlor/OneDrive/Desktop/custom_component/multi_menu/template/multi_menu/frontend/src/MultiMenu.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\n\n// No longer using the custom hook since we'll integrate the stylesheet link directly into the render method\n\nfunction darkenColor(color: string, percent: number): string {\n  let num = parseInt(color.replace(\"#\", \"\"), 16),\n      amt = Math.round(2.55 * percent),\n      R = (num >> 16) - amt,\n      G = ((num >> 8) & 0x00FF) - amt,\n      B = (num & 0x0000FF) - amt;\n  return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);\n}\n\nclass MultiMenu extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n    const { menu_titles, menu_titles_font_size, sub_menus, use_container_width, sub_menu_color, sub_menu_font_size, sub_menu_button_gap, sub_menu_font_color, sub_menu_imgs, sub_menu_icons } = this.props.args;\n    const safeSubMenuColor = sub_menu_color || '#F0F2F6'; // Default color if sub_menu_color is undefined\n    const darkerSubMenuColor = darkenColor(safeSubMenuColor, 10);\n\n    const componentStyle: React.CSSProperties = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: '100%',\n    };\n\n    const titleContainerStyle: React.CSSProperties = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center',\n      flex: use_container_width ? 1 : undefined,\n      margin: '0 5px',\n    };\n\n    const titleStyle: React.CSSProperties = {\n      marginBottom: '5px',\n      fontWeight: 'bold',\n      fontSize: menu_titles_font_size,\n    };\n\n    const lineStyle: React.CSSProperties = {\n      height: '1.25px',\n      backgroundColor: '#BDBFC3',\n      width: '100%',\n    };\n\n    // Ensure the Material Icons stylesheet is available\n    return (\n      <>\n        <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n        <div style={componentStyle}>\n          {menu_titles.map((title: string, index: number) => (\n            <div key={title} style={titleContainerStyle}>\n              <h3 style={titleStyle}>{title}</h3>\n              <div style={lineStyle}></div>\n              {sub_menus[title] && sub_menus[title].map((subMenu: string, subMenuIndex: number) => {\n                const iconName = sub_menu_icons[title] ? sub_menu_icons[title][subMenuIndex] : '';\n                return (\n                  <div key={subMenu + subMenuIndex} style={{ marginTop: sub_menu_button_gap, width:'100%' }}>\n                    <button\n                      onClick={() => this.onSubMenuClicked(subMenu)}\n                      style={{\n                        cursor: \"pointer\",\n                        width: \"100%\",\n                        borderRadius: '8px',\n                        backgroundColor: safeSubMenuColor,\n                        color: sub_menu_font_color,\n                        border: \"none\",\n                        padding: '5px 5px',\n                        fontSize: sub_menu_font_size,\n                      }}\n                    >\n                      {iconName && <i className=\"material-icons\" style={{ verticalAlign: 'middle', marginRight: '8px' }}>{iconName}</i>}\n                      {subMenu}\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  };\n\n  private onSubMenuClicked = (subMenuName: string): void => {\n    Streamlit.setComponentValue(subMenuName);\n  };\n}\n\nexport default withStreamlitConnection(MultiMenu);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}